<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">



    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="db/${jdbc.initLocation}"/>
        <jdbc:script location="db/${jdbc.populateLocation}"/>
    </jdbc:initialize-database>


    <context:component-scan base-package="com.epam.ivanou.avia.repository.jpa"/>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="com.epam.ivanou.avia.model">

        <property name="jpaPropertyMap">
            <map>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"
                       value="${hibernate.use_sql_comments}"/>
                <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}"-->
                       <!--value="org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory"/>-->
                <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/>-->
                <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="false"/>-->
                <!--<entry key="#{T(org.hibernate.cache.ehcache.ConfigSettings).EHCACHE_CONFIGURATION_RESOURCE_NAME}"-->
                       <!--value="cache/ehcache.xml"/>-->
            </map>
        </property>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                  p:showSql="${jpa.showSql}"
                  p:databasePlatform="org.hibernate.dialect.PostgreSQL95Dialect">
            </bean>
        </property>
    </bean>

    <tx:annotation-driven/>

    <!-- Transaction manager-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>


    <!--
        <context:component-scan base-package="com.epam.ivanou.avia.repository.jdbc"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
        -->

    <beans profile="postgres">
        <context:property-placeholder location="classpath:db/postgre.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.user}"/>
            <property name="password" value="${database.password}"/>
        </bean>
    </beans>

    <!--no pool-->
    <beans profile="mysql">
        <context:property-placeholder location="classpath:db/mysql.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.user}"/>
            <property name="password" value="${database.password}"/>
        </bean>
    </beans>
</beans>